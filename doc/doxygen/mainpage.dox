/** \mainpage nomagic probe
The nomic probe is a firmware for the <a href="https://www.raspberrypi.com/products/raspberry-pi-pico/">RaspberryPi Pico board</a> that provides a gdbserver interface for debugging other boards. That is the functionality of the <a href="https://github.com/raspberrypi/picoprobe" >picoprobe</a> and <a href="https://openocd.org/" >OpenOCD</a> combined. It is also similar to the <a href="https://black-magic.org/" >Black Magic Firmware</a>.

It does not use external libraries. Therefore all code is in this library, no dependencies!

No dynamic memory allocation, no malloc!

<h2>features</h2>
<ul>
<li>USB CDCD(serial port) gdb server</li>
<li>USB MSCD(thumb drive) for configuration files.</li>
<li>support for SWD according to ARM ADIv5.0, ARM ADIv5.1, ARM ADIv5.2, ARM ADIv6.0.</li>
</ul>

<h2>building and starting</h2>

The firmware can be build using make. The generated Files will be placed in the bin folder. For details try
<pre>
  <code>
make help
  </code>
</pre>

for this to work you (obviously) need to have make installed. Depending on the target you are building for you might need to have additionaltools installed:
<ul>
<li>to compile you need <a href="https://launchpad.net/gcc-arm-embedded" >arm-none-eabi-gcc</a>.</li>
<li>You can debug using arm-none-eabi-gdb and <a href="https://openocd.org/" >OpenOCD</a></li>
<li>to create an *.uf2 file you need <a href="https://github.com/JustAnother1/elf2uf2/releases" >elf2uf2</a></li>
<li>for automatic generated documentation you need <a href="http://www.stack.nl/~dimitri/doxygen/" >Doxygen</a></li>
<li>for unit testing you need gcc/cc for your platform</li>
</ul>

<h2>pinout</h2>

The pico has 40 pins (1..40) Numbered counter clock wise starting at the USB connector.
<pre>
  <code>
                  +-----+
           +-------+ USB +---------+
   GPIO 0 -+- 1    +-----+     40 -+- Vbus
   GPIO 1 -+- 2                39 -+- Vsys
      Gnd -+- 3                38 -+- Gnd
   GPIO 2 -+- 4                37 -+- 3V3_EN
   GPIO 3 -+- 5                36 -+- 3V3(Out)
   GPIO 4 -+- 6                35 -+- ADC-Vref
   GPIO 5 -+- 7                34 -+- GPIO 28
      Gnd -+- 8                33 -+- Gnd
   GPIO 6 -+- 9                32 -+- GPIO 27
   GPIO 7 -+- 10               31 -+- GPIO 26
   GPIO 8 -+- 11               30 -+- Run = /Reset
   GPIO 9 -+- 12               29 -+- GPIO 22
      Gnd -+- 13               28 -+- Gnd
  GPIO 10 -+- 14               27 -+- GPIO 21
  GPIO 11 -+- 15               26 -+- GPIO 20
  GPIO 12 -+- 16               25 -+- GPIO 19
  GPIO 13 -+- 17               24 -+- GPIO 18
      Gnd -+- 18               23 -+- Gnd
  GPIO 14 -+- 19               22 -+- GPIO 17
  GPIO 15 -+- 20     Debug     21 -+- GPIO 16
           +-----------------------+
                   S  G  S
                   W  n  W
                   C  d  D
                   L     I
                   K     O


Pin 2:  (GPIO 1)  SWDIR (High = from Probe to target; Low= from Target to probe)
Pin 4:  (GPIO 2)  SWCLK
Pin 5:  (GPIO 3)  SWDIO
Pin 6:  (GPIO 4)  Target Uart TX (UART1) connect to target RT
Pin 7:  (GPIO 5)  Target Uart RX (UART1) connect to target TX
Pin 9:  (GPIO 6)  Run = /Reset
Pin 21: (GPIO 16) Debug Uart TX (UART0)
Pin 22: (GPIO 17) Debug Uart RX (UART0)
  </code>
</pre>

<h2>license</h2>

<pre>
  <code>
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License version 2
as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, see <http://www.gnu.org/licenses/>
  </code>
</pre>
*/
